/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interfaces;

import Items.Conectar;
import Pojo.Producto;
import java.awt.event.KeyEvent;
import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author h p
 */
public class Mod extends javax.swing.JFrame {

    /**
     * Creates new form Mod
     */
    public Mod() {
        initComponents();
        setIconImage(new ImageIcon(this.getClass().getResource("/Imagen/capsule.png")).getImage());
    }
    String [] v = {"Analgésicos","Antibiótico","Vacuna","Antisépticos",
                "Antiinflamatorios","Antiinflamatorio No Esteroideo","Antiinflamatorio Esteroideo",
                "Antihistamínicos","Anestésico","Antidepresivo","Diuréticos","Laxantes","Broncodilatador",
                "Antipirético","Antifúngico"};
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField(8);
        jLabel3 = new javax.swing.JLabel();
        Marca = new javax.swing.JTextField(8);
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Cantidad = new javax.swing.JTextField(8);
        Precio = new javax.swing.JTextField(8);
        jLabel6 = new javax.swing.JLabel();
        Vias = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Forma = new javax.swing.JComboBox();
        Tipo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        Aceptar = new javax.swing.JButton();
        Limpiar = new javax.swing.JButton();
        Atras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new java.awt.BorderLayout());

        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0};
        jPanel2Layout.rowHeights = new int[] {0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0, 7, 0};
        jPanel2.setLayout(jPanel2Layout);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Id:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(Name, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Nombre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(Marca, gridBagConstraints);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Marca:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Cantidad:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel5, gridBagConstraints);

        Cantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CantidadFocusLost(evt);
            }
        });
        Cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CantidadKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(Cantidad, gridBagConstraints);

        Precio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PrecioFocusLost(evt);
            }
        });
        Precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PrecioKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(Precio, gridBagConstraints);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Precio:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel6, gridBagConstraints);

        Vias.removeAllItems();
        String [] v = {"Oral","Intramuscular","Intravenosa","Subcutánea","Inhalatoria","Transdermica","Nasal","Oftalmica",
            "Ótica","Tópica","Rectal","Vaginal"};
        Vias.addItem("Vias de administracion");
        for(String s: v){
            Vias.addItem(s);
        }
        Vias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(Vias, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Via:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel7, gridBagConstraints);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Forma:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel8, gridBagConstraints);

        Forma.removeAllItems();
        Forma.addItem("Forma");
        Forma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(Forma, gridBagConstraints);

        Tipo.removeAllItems();
        Tipo.addItem("Tipo");
        Tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(Tipo, gridBagConstraints);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Tipo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel9, gridBagConstraints);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);
        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripción"));
        jScrollPane1.setViewportView(jTextArea1);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        Aceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });
        jPanel5.add(Aceptar);

        Limpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });
        jPanel5.add(Limpiar);

        Atras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Atras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtrasActionPerformed(evt);
            }
        });
        jPanel5.add(Atras);

        jPanel4.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(464, 468));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ViasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViasActionPerformed
        // TODO add your handling code here:
        if(Vias.getSelectedItem().equals("Oral")){
            String [] v = {"Cápsulas","Comprimidos","Grageas","Preparados líquidos","Jarabes","Elixires","Suspensiones"};
            Forma.removeAllItems();
            Forma.addItem("Forma");
            for(String s: v){
                Forma.addItem(s);
            }
        }else if(Vias.getSelectedItem().equals("Intramuscular")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Inyección");
        }else if(Vias.getSelectedItem().equals("Intravenosa")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Inyección");
        }else if(Vias.getSelectedItem().equals("Vias de administracion")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");
        }else if(Vias.getSelectedItem().equals("Tópica")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Cremas");
            Forma.addItem("Spray");
            Forma.addItem("Unguento");
            Forma.addItem("Jabón");
            Forma.addItem("Shampoo");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");
        }else if(Vias.getSelectedItem().equals("Ótica")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Gotas");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");
        }else if(Vias.getSelectedItem().equals("Subcutánea")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Inyección");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");
        }else if(Vias.getSelectedItem().equals("Inhalatoria")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Spray");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");
        }else if(Vias.getSelectedItem().equals("Nasal")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Crema");
            Forma.addItem("Unguento");
            Forma.addItem("Spray");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");
        }else if(Vias.getSelectedItem().equals("Oftalmica")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Crema");
            Forma.addItem("Gotas");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");            
        }else if(Vias.getSelectedItem().equals("Transdermica")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Inyección");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");         
        }else if(Vias.getSelectedItem().equals("Rectal")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Supositorio");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");         
        }else if(Vias.getSelectedItem().equals("Vaginal")){
            Forma.removeAllItems();
            Forma.addItem("Forma");
            Forma.addItem("Crema");
            Forma.addItem("Ovulos");
            Tipo.removeAllItems();
            Tipo.addItem("Tipo");         
        }
    }//GEN-LAST:event_ViasActionPerformed

    private void FormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormaActionPerformed
        // TODO add your handling code here:
        if((Vias.getSelectedItem()!="Vias de administracion") && (Forma.getItemCount())!=0){
            if(Forma.getSelectedItem().equals("Forma")){
                Tipo.removeAllItems();
                Tipo.addItem("Tipo");
            }else{   
                Tipo.removeAllItems();
                Tipo.addItem("Tipo"); 
                for(String s: v){     
                    Tipo.addItem(s);
                } 
            }
        } 
    }//GEN-LAST:event_FormaActionPerformed

    private void TipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TipoActionPerformed

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        // TODO add your handling code here:
        Clear();
    }//GEN-LAST:event_LimpiarActionPerformed

    private void CantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CantidadKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) 
            evt.consume();
    }//GEN-LAST:event_CantidadKeyTyped

    private void CantidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CantidadFocusLost
        // TODO add your handling code here:
        try{
            if(!(Cantidad.getText().equals(""))){
                int x = parseInt(Cantidad.getText());
            }
        }catch(NumberFormatException e){
            this.getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Solo se pueden insertar numeros","Solo Numeros",JOptionPane.ERROR_MESSAGE, null);                        
            Cantidad.requestFocus();
            Cantidad.selectAll();
        }
    }//GEN-LAST:event_CantidadFocusLost

    private void PrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PrecioKeyTyped
        // TODO add your handling code here:
        int cont = 0;
        char caracter = evt.getKeyChar();
        if(cont == 0){
            if(((caracter < '0') || (caracter > '9')) && (caracter != KeyEvent.VK_BACK_SPACE) && (caracter !='.')){
                evt.consume();
            }else if(caracter == '.'){
                String s = Precio.getText();
                if(s.length() == 0){
                    Precio.setText(0+s);
                }
                cont++;
            }
        }else{
            if((caracter<'0' || caracter>'9')) 
                evt.consume();
        }
        if((int)caracter == 8){
            if(Precio.getText().equals("")){
                cont = 0;
            }
        }
    }//GEN-LAST:event_PrecioKeyTyped

    private void PrecioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PrecioFocusLost
        // TODO add your handling code here:
        try{
            if(!(Precio.getText().equals(""))){
                double x = parseDouble(Precio.getText());
            }
        }catch(NumberFormatException e){
            this.getToolkit().beep();       
            JOptionPane.showMessageDialog(null, "Solo se pueden insertar numeros decimales","Solo Numeros Decimales",JOptionPane.ERROR_MESSAGE, null);             
            Precio.requestFocus();
            Precio.selectAll();
        }
    }//GEN-LAST:event_PrecioFocusLost

    private void AtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtrasActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_AtrasActionPerformed

    private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
        // TODO add your handling code here:
        if(!(Name.getText().equals("")&& Cantidad.getText().equals("") && Precio.getText().equals("")
                && Marca.getText().equals("") && jTextArea1.getText().equals("") && Vias.getSelectedItem().equals("Vias de administracion")
                && Forma.getSelectedItem().equals("Forma") && Tipo.getSelectedItem().equals("Tipo"))){
                Producto p = new Producto();
                p.setName(Name.getText());
                p.setId(parseInt(jLabel2.getText()));
                p.setCantidad(parseInt(Cantidad.getText()));
                p.setPrecio(parseDouble(Precio.getText()));
                p.setDescripcion(jTextArea1.getText());
                p.setMarca(Marca.getText());
                p.setVia((String)Vias.getSelectedItem());
                p.setForma((String)Forma.getSelectedItem());
                p.setTipo((String)Tipo.getSelectedItem());
                Clear();
                new Conectar().ModificarProd(p);
                JOptionPane.showMessageDialog(null,"Su producto fue modificado exitosamente");
                dispose();                
        }else{
            JOptionPane.showMessageDialog(null,"Debe de llenar todos los campos","Informacion Incompleta",JOptionPane.INFORMATION_MESSAGE,null);            
        }
    }//GEN-LAST:event_AceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mod().setVisible(true);                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton Aceptar;
    private static javax.swing.JButton Atras;
    private javax.swing.JTextField Cantidad;
    private javax.swing.JComboBox Forma;
    private static javax.swing.JButton Limpiar;
    private javax.swing.JTextField Marca;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Precio;
    private javax.swing.JComboBox Tipo;
    private javax.swing.JComboBox Vias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    Producto pd;
    void SetP(Producto p) {
        pd = p;
        String id;
        jLabel2.setText((id=new Search().SetLength(""+p.getId())));
        Name.setText(p.getName());
        Marca.setText(p.getMarca());
        Vias.setSelectedItem(p.getVia());
        Forma.setSelectedItem(p.getForma());
        Tipo.setSelectedItem(p.getTipo());
        Precio.setText(""+p.getPrecio());
        Cantidad.setText(""+p.getCantidad());
        jTextArea1.setText(p.getDescripcion());
        Aceptar.setIcon(new ImageIcon(this.getClass().getResource("/Imagen/Ok.png")));
        Limpiar.setIcon(new ImageIcon(this.getClass().getResource("/Imagen/Clean.png")));
        Atras.setIcon(new ImageIcon(this.getClass().getResource("/Imagen/exit.png")));
        this.setVisible(true);
    }

    private void Clear() {
        String id;
        Vias.setSelectedItem("Vias de Administracion");
        Forma.setSelectedItem("Forma");
        Tipo.setSelectedItem("Tipo");
        jLabel2.setText((id=new Search().SetLength(""+pd.getId())));
        Name.setText("");
        Marca.setText("");
        Vias.setSelectedItem("");
        Forma.setSelectedItem("");
        Tipo.setSelectedItem("");
        Precio.setText("");
        Cantidad.setText("");
        jTextArea1.setText("");
    }
}
